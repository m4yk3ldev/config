{
  "html.enable": true,
  "html.filetypes": ["django", "htmldjango", "html"],
  "html.format.enable": true,
  "eslint.autoFixOnSave": true,
  "eslint.filetypes": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "markdown",
    "javascript",
    "json",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "tsserver.formatOnType": true,
  "coc.preferences.formatOnType": true,
  "git.addedSign.hlGroup": "GitGutterAdd",
  "git.changedSign.hlGroup": "GitGutterChange",
  "git.removedSign.hlGroup": "GitGutterDelete",
  "git.topRemovedSign.hlGroup": "GitGutterDelete",
  "git.changeRemovedSign.hlGroup": "GitGutterChangeDelete",
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "languageserver": {
    "vimls": {
      "command": "vim-language-server",
      "args": ["--stdio"],
      "initializationOptions": {
        "isNeovim": true, // is neovim, default false
        "iskeyword": "@,48-57,_,192-255,-#", // vim iskeyword option
        "vimruntime": "", // $VIMRUNTIME option
        "runtimepath": "", // vim runtime path separate by `,`
        "diagnostic": {
          "enable": true
        },
        "indexes": {
          "runtimepath": true, // if index runtimepath's vim files this will effect the suggest
          "gap": 100, // index time gap between next file
          "count": 3, // count of files index at the same time
          "projectRootPatterns": [
            "strange-root-pattern",
            ".git",
            "autoload",
            "plugin"
          ] // Names of files used as the mark of project root. If empty, the default value [".git", "autoload", "plugin"] will be used
        },
        "suggest": {
          "fromVimruntime": true, // completionItems from vimruntime's vim files
          "fromRuntimepath": false // completionItems from runtimepath's vim files, if this is true that fromVimruntime is true
        }
      },
      "filetypes": ["vim"]
    }
  },
  "codeLens.enable": true,
  // File extensions to be parsed by the Typescript parser
  "importCost.typescriptExtensions": ["\\.tsx?$"],

  // File extensions to be parsed by the Javascript parser
  "importCost.javascriptExtensions": ["\\.jsx?$"],

  // Which bundle size to display
  "importCost.bundleSizeDecoration": "both",

  // Display the 'calculating' decoration
  "importCost.showCalculatingDecoration": true,

  // Print debug messages in output channel
  "importCost.debug": false
}
